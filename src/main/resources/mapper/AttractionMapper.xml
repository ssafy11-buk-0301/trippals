<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.trippals.attraction.dao.AttractionDao">

    <!--  여행 경로에 속한 여행지 조회  -->
    <select id="findByRouteSeq" resultType="RouteAttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude,
                ra.order_number     order_number

        from    attraction_info ai, attraction_description ad, route_attraction ra

        where   ai.content_id = ad.content_id
          and   ai.content_id = ra.attraction_seq
          and   ra.route_seq = #{ routeSeq }

        order by order_number;
    </select>

    <!--  여행지 키워드로 검색  -->
    <select id="findByKeyword" parameterType="AttractionSearchParams"
            resultType="AttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude

        from    attraction_info ai, attraction_description ad

        where   ai.content_id = ad.content_id
          and   ai.content_type_id = 12
          and   ai.title like CONCAT('%', #{ keyword }, '%')

        limit   #{ pageParams.offset }, #{ pageParams.limit }
    </select>

    <!--  여행지 시도 코드와 키워드로 검색  -->
    <select id="findBySidoAndKeyword" parameterType="AttractionSearchParams"
            resultType="AttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude

        from    attraction_info ai, attraction_description ad

        where   ai.content_id = ad.content_id
          and   ai.content_type_id = 12
          and   ai.sido_code = #{ sidocode }
          and   ai.title like CONCAT('%', #{ keyword }, '%')

        limit   #{ pageParams.offset }, #{ pageParams.limit }
    </select>

    <!--  여행지 구군 코드와 키워드로 검색  -->
    <select id="findByGugunAndKeyword" parameterType="AttractionSearchParams"
            resultType="AttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude

        from    attraction_info ai, attraction_description ad

        where   ai.content_id = ad.content_id
          and   ai.content_type_id = 12
          and   ai.sido_code = #{ sidocode }
          and   ai.gugun_code = #{ guguncode }
          and   ai.title like CONCAT('%', #{ keyword }, '%')

        limit   #{ pageParams.offset }, #{ pageParams.limit }
    </select>

    <!--  여행지 키워드로 검색 개수 조회  -->
    <select id="countByKeyword" parameterType="AttractionSearchParams"
            resultType="int">
        select  count(ai.content_id)

        from    attraction_info ai, attraction_description ad

        where   ai.content_id = ad.content_id
          and   ai.content_type_id = 12
          and   ai.title like CONCAT('%', #{ keyword }, '%')
    </select>

    <!--  여행지 시도 코드와 키워드로 검색 개수 조회  -->
    <select id="countBySidoAndKeyword" parameterType="AttractionSearchParams"
            resultType="int">
        select  count(ai.content_id)

        from    attraction_info ai, attraction_description ad

        where   ai.content_id = ad.content_id
          and   ai.content_type_id = 12
          and   ai.sido_code = #{ sidocode }
          and   ai.title like CONCAT('%', #{ keyword }, '%')
    </select>

    <!--  여행지 구군 코드와 키워드로 검색 개수 조회 -->
    <select id="countByGugunAndKeyword" parameterType="AttractionSearchParams"
            resultType="int">
        select  count(ai.content_id)

        from    attraction_info ai, attraction_description ad

        where   ai.content_id = ad.content_id
          and   ai.content_type_id = 12
          and   ai.sido_code = #{ sidocode }
          and   ai.gugun_code = #{ guguncode }
          and   ai.title like CONCAT('%', #{ keyword }, '%')
    </select>

    <!--  여행 경로 주변 여행지 타입으로 조회  -->
    <select id="findNearbyAttractionsByContentType" parameterType="NearByAttractionContentTypeSelect"
            resultType="AttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude

        from    attraction_info ai, attraction_description ad,
                (
                    select  distinct sido_code, gugun_code
                    from  route_attraction ra, attraction_info ai2
                    where  ra.route_seq = #{ routeSeq }
                      and  ra.attraction_seq = ai2.content_id
                ) area

        where   ai.content_id = ad.content_id
          and   ai.sido_code = area.sido_code
          and   ai.gugun_code = area.gugun_code
          and   ai.content_type_id = #{ contentType }

        limit   #{ offset }, #{ limit };
    </select>

    <!--  여행 경로 주변 여행지 타입으로 조회 개수 -->
    <select id="countNearbyAttractionsByContentType" parameterType="NearByAttractionContentTypeSelect"
            resultType="int">
        select  count(ai.content_id)

        from    attraction_info ai, attraction_description ad,
                (
                    select  distinct sido_code, gugun_code
                    from  route_attraction ra, attraction_info ai2
                    where  ra.route_seq = #{ routeSeq }
                      and  ra.attraction_seq = ai2.content_id
                ) area

        where   ai.content_id = ad.content_id
          and   ai.sido_code = area.sido_code
          and   ai.gugun_code = area.gugun_code
          and   ai.content_type_id = #{ contentType }
    </select>

    <!--  여행 경로 content id로 탐색  -->
    <select id="findByContentId" resultType="AttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude
        from    attraction_info ai, attraction_description ad
        where   ai.content_id = ad.content_id
          and   ai.content_id = #{ contentId };
    </select>

    <!--  여행 경로의 여행지를 content id로 탐색  -->
    <select id="findByRouteSeqAndContentId" resultType="RouteAttractionDto">
        select  ai.content_id       content_id,
                content_type_id,
                title,
                overview,
                addr1               addr,
                first_image         image,
                latitude,
                longitude

        where   ai.content_id = ad.content_id
          and   ai.content_id = #{ contentId }
          and   ai.c;
    </select>

    <!--  여행지로 리뷰 조회  -->
    <select id="findReviewByContentId" resultType="com.ssafy.trippals.board.dto.BoardDto">
        select  b.seq, b.user_seq, b.title, b.content, b.reg_dt, b.read_count, b.is_draft, b.route_seq,u.name writer,r.thumbnail

        from  board b, route r, users u, (
            select    distinct route_seq
            from    route_attraction
            where    attraction_seq = #{ contentId }
        ) candidate_route

        where  b.user_seq = u.seq
          and  b.route_seq = r.seq
          and  b.route_seq = candidate_route.route_seq

        limit   #{ offset }, #{ limit };
    </select>

    <!--  여행지 리뷰 개수 세기  -->
    <select id="countReviewByContentId" resultType="java.lang.Integer">
        select  count(b.seq)

        from  board b, route r, users u, (
            select    distinct route_seq
            from    route_attraction
            where    attraction_seq = #{ contentId }
        ) candidate_route

        where  b.user_seq = u.seq
          and  b.route_seq = r.seq
          and  b.route_seq = candidate_route.route_seq;
    </select>

</mapper>