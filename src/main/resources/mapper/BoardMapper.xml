<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.trippals.board.dao.BoardDao">
    <!--  BoardParams(limit,offset,SearchWord)로 Select  -->
    <!--orderBy 프론트에서 기본값 제공-->
    <select id="findBoard" parameterType="BoardParamDto" resultType="BoardDto">
        select  b.seq, b.user_seq, b.title, b.content, b.reg_dt, b.read_count, b.is_draft, b.route_seq,u.name writer,r.thumbnail
        from board b
        inner join users u on b.user_seq = u.seq
        LEFT JOIN route r ON b.route_seq = r.seq
        where b.is_draft = 0
        <if test="searchWord != '' and searchWord !=null">
            and b.title like concat('%', #{searchWord} ,'%')
        </if>
        <choose>
            <when test="orderBy == 'seq'">
                order by b.seq
            </when>
            <when test="orderBy == 'user_seq'">
                order by b.user_seq
            </when>
            <when test="orderBy == 'title'">
                order by b.title
            </when>
            <when test="orderBy == 'reg_dt'">
                order by b.reg_dt
            </when>
            <when test="orderBy == 'read_count'">
                order by b.read_count
            </when>
            <when test="orderBy == 'route_seq'">
                order by b.route_seq
            </when>
            <!-- 필요한 다른 컬럼에 대해서도 추가 -->
            <otherwise>
                order by b.seq
            </otherwise>
        </choose>
        <choose>
            <when test="ascDesc == 'asc'">
                asc
            </when>
            <when test="ascDesc == 'desc'">
                desc
            </when>
            <otherwise>
                asc
            </otherwise>
        </choose>
        limit #{limit} offset #{offset}
    </select>

    <select id="findBoardBySearchWord" parameterType="BoardParamDto" resultType="BoardDto">
        select  b.seq, b.user_seq, b.title, b.content, b.reg_dt, b.read_count, b.is_draft, b.route_seq
        from board b, users u
        where b.user_seq = u.seq
          and b.title like concat('%', #{searchWord} ,'%') and b.is_draft=0
        order by ${orderBy} ${ascDesc}
            limit #{limit} offset #{offset}
    </select>

    <select id="countBoard" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM board
        where is_draft=0
        <if test="searchWord != '' and searchWord !=null">
            and title like concat('%', #{searchWord} ,'%')
        </if>
    </select>

    <select id="countBySearchWord" parameterType="string" resultType="int">
        select count(*)
        from board
        where title like concat('%', #{searchWord} ,'%') and is_draft=0
    </select>

    <select id="findBoardBySeq" parameterType="int" resultType="com.ssafy.trippals.board.dto.BoardDto">

        SELECT
            b.*,               -- board 테이블의 모든 컬럼을 선택
            u.name writer,     -- users 테이블에서 name 컬럼을 선택
            r.seq route_seq,
            r.name route_name,
            r.overview,
            r.thumbnail,
            r.start_date       -- route 테이블
        FROM
                (SELECT * FROM board WHERE seq = #{boardSeq}) b
                    INNER JOIN
            users u ON b.user_seq = u.seq
                    LEFT JOIN
            route r ON b.route_seq = r.seq;

    </select>

    <!--  Board 생성  -->
    <insert id="insertBoard" parameterType="BoardDto" useGeneratedKeys="true" keyProperty="seq">
        insert into board(user_seq, title, content, route_seq,is_draft,reg_dt)
        values ( #{userSeq}, #{title}, #{content}, #{routeSeq},#{isDraft},now());
    </insert>

    <!--  Board 수정  -->
    <update id="updateBoard" parameterType="BoardDto">
        update board
        set title = #{title},
            content   = #{content},
            route_seq = #{routeSeq}
        where seq = #{seq} and user_seq=#{userSeq};
    </update>

    <!--  Board 삭제  -->
    <delete id="deleteBoardBySeq">
        delete from board
        where seq = #{boardSeq} and user_seq=#{userSeq};
    </delete>

    <insert id="insertReadByUser" parameterType="map">
        insert into board_user_read ( board_seq, user_seq )
        values ( #{boardSeq}, #{userSeq} )
    </insert>

    <select id="findReadByUser" parameterType="map" resultType="int">
        select count(*) from board_user_read
        where board_seq = #{boardSeq}
          and user_seq = #{userSeq}
    </select>

    <update id="boardReadCountUpdate" parameterType="int">
        update board set read_count = read_count + 1
        where seq = #{boardSeq}
    </update>

    <update id="boardReadCountDelete" parameterType="int">
        delete from board_user_read where board_seq = #{boardSeq}
    </update>

    <select id="boardDetailFileList" parameterType="int" resultType="BoardFileDto">
        select board_seq, seq, file_name, file_size, file_content_type,
               file_uuid, reg_dt
        from board_file
        where board_seq = #{boardSeq}
    </select>

    <insert id="boardFileInsert" parameterType="BoardFileDto">
        insert into board_file ( board_seq, file_name, file_size, file_content_type, file_uuid )
        values ( #{boardSeq}, #{fileName}, #{fileSize}, #{fileContentType}, #{fileUUID} )
    </insert>

    <delete id="boardFileDelete" parameterType="int">
        delete from board_file where board_seq = #{boardSeq}
    </delete>

    <!-- findBoardFileByBoardSeq-->
    <select id="boardFileDeleteList" parameterType="int" resultType="string">
        select file_uuid from board_file where board_seq = #{boardSeq}
    </select>

    <select id="findBoardByUserSeq" parameterType="int" resultType="string">
        select * from board where user_seq=#{userSeq}
    </select>

</mapper>